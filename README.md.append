### Running the Backend Service

1. Navigate to the backend directory:
   ```
   cd backend
   ```

2. Create a virtual environment (if not already created):
   ```
   python3 -m venv venv
   ```

3. Activate the virtual environment:
   - On Linux/macOS:
     ```
     source venv/bin/activate
     ```
   - On Windows:
     ```
     venv\Scripts\activate
     ```

4. Install the required packages:
   ```
   pip install -r requirements.txt
   ```

5. Run the backend service:
   ```
   python app.py
   ```

   Or use the provided script:
   ```
   ./run.sh
   ```

The backend will start on http://localhost:8080

### Running the Flutter App

1. Make sure you have Flutter installed and set up.

2. Run the following command to get dependencies:
   ```
   flutter pub get
   ```

3. Start your emulator or connect a physical device.

4. Run the app:
   ```
   flutter run
   ```

## API Endpoints

- **POST /auth/register** - Register a new doctor
- **POST /auth/login** - Login with username and password
- **GET /auth/me** - Get current doctor profile (requires authentication)
- **POST /auth/logout** - Logout the current doctor (requires authentication)

## Authentication Flow

1. The app starts with a splash screen
2. If the user has not logged in before, they are directed to the login screen
3. Users can register a new account or log in with existing credentials
4. After successful authentication, users are redirected to the home screen
5. The authentication token is stored securely and used for subsequent API requests

## Technical Details

- The backend uses SQLite3 for data storage
- Authentication is implemented using JWT tokens
- The Flutter app uses the provider pattern for state management
